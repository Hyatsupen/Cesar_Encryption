# install_requirements.py
import sys
import subprocess
from pathlib import Path

def check_python_version():
    """Verifica que Python 3.8+ est√© instalado"""
    if sys.version_info < (3, 8):
        print("\n‚ùå Se requiere Python 3.8 o superior")
        print(f"Versi√≥n actual: {sys.version.split()[0]}")
        sys.exit(1)

def install_requirements():
    """Instala las dependencias desde requirements.txt"""
    req_file = Path("requirements.txt")
    
    # Verificar si el archivo existe
    if not req_file.exists():
        print("\n‚ÑπÔ∏è  No se encontr√≥ requirements.txt")
        print("Creando archivo b√°sico con Python 3.8+ como requisito...")
        with open(req_file, 'w') as f:
            f.write("python>=3.8\n")
        print("‚úÖ Archivo creado: requirements.txt")
    
    print("\nüîç Analizando dependencias...")
    
    try:
        # Instalar dependencias
        subprocess.check_call(
            [sys.executable, "-m", "pip", "install", "-r", "requirements.txt"],
            stdout=subprocess.DEVNULL
        )
        print("‚úÖ Todas las dependencias se instalaron correctamente")
        
    except subprocess.CalledProcessError:
        print("\n‚ùå Error al instalar dependencias. Soluci√≥n:")
        print("1. Verifica que pip est√© actualizado:")
        print("   python -m pip install --upgrade pip")
        print("2. Revisa el archivo requirements.txt")
        sys.exit(1)

def main():
    print("\n" + "‚ïê" * 50)
    print("  INSTALADOR AUTOM√ÅTICO - CIFRADO C√âSAR")
    print("‚ïê" * 50)
    
    check_python_version()
    install_requirements()
    
    # Verificaci√≥n final
    print("\n" + "‚ïê" * 50)
    print("Versi√≥n de Python:", sys.version.split()[0])
    print("Ubicaci√≥n:", sys.executable)
    print("‚ïê" * 50)

if __name__ == "__main__":
    main()